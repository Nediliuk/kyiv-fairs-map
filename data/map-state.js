// data/map-state.js
// –°–∏—Å—Ç–µ–º–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—ó –∫–∞—Ä—Ç–∏

const MAP_STATE_KEY = 'kyiv-fairs-map-state-v1';
const STATE_EXPIRY = 30 * 24 * 60 * 60 * 1000; // 30 –¥–Ω—ñ–≤ –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö

// –î–µ—Ñ–æ–ª—Ç–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∫–∞—Ä—Ç–∏ (–≤–∞—à—ñ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è)
const DEFAULT_MAP_STATE = {
  center: [30.541831, 50.421004],
  zoom: 17,
  pitch: 57.75,
  bearing: 36.96
};

/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ç–æ—á–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏ –≤ localStorage
 * @param {mapboxgl.Map} map - –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–∞—Ä—Ç–∏ Mapbox
 */
export function saveMapState(map) {
  try {
    const state = {
      center: [map.getCenter().lng, map.getCenter().lat], // [lng, lat] —Ñ–æ—Ä–º–∞—Ç
      zoom: map.getZoom(),
      pitch: map.getPitch(), 
      bearing: map.getBearing(),
      timestamp: Date.now()
    };
    
    localStorage.setItem(MAP_STATE_KEY, JSON.stringify(state));
    console.log('üìç –ü–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', {
      center: state.center,
      zoom: Math.round(state.zoom * 100) / 100
    });
    
  } catch (e) {
    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏:', e);
  }
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏ –∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ñ–æ–ª—Ç–Ω—É
 * @returns {Object} –æ–±'—î–∫—Ç –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∫–∞—Ä—Ç–∏ (center, zoom, pitch, bearing)
 */
export function loadMapState() {
  try {
    const saved = localStorage.getItem(MAP_STATE_KEY);
    
    if (saved) {
      const state = JSON.parse(saved);
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–µ –∑–∞–Ω–∞–¥—Ç–æ —Å—Ç–∞—Ä–∏–π —Å—Ç–∞–Ω (–±—ñ–ª—å—à–µ 30 –¥–Ω—ñ–≤)
      if (state.timestamp && (Date.now() - state.timestamp < STATE_EXPIRY)) {
        
        // –í–∞–ª—ñ–¥—É—î–º–æ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º
        if (isValidMapState(state)) {
          console.log('‚úÖ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏:', {
            center: state.center,
            zoom: Math.round(state.zoom * 100) / 100
          });
          return state;
        } else {
          console.warn('‚ö†Ô∏è –ó–±–µ—Ä–µ–∂–µ–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∫–∞—Ä—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É');
        }
      } else {
        console.log('‚è∞ –ó–±–µ—Ä–µ–∂–µ–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∫–∞—Ä—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É');
      }
    }
    
  } catch (e) {
    console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó –∫–∞—Ä—Ç–∏:', e);
    localStorage.removeItem(MAP_STATE_KEY);
  }
  
  console.log('üó∫Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É –ø–æ–∑–∏—Ü—ñ—é –∫–∞—Ä—Ç–∏');
  return DEFAULT_MAP_STATE;
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∫–æ—Ä–µ–∫—Ç–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–∞–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó –∫–∞—Ä—Ç–∏
 */
function isValidMapState(state) {
  if (!state.center || !Array.isArray(state.center) || state.center.length !== 2) {
    return false;
  }
  
  const [lng, lat] = state.center;
  if (lng < 22 || lng > 40 || lat < 44 || lat > 52) {
    return false;
  }
  
  if (typeof state.zoom !== 'number' || state.zoom < 8 || state.zoom > 22) {
    return false;
  }
  
  if (typeof state.pitch !== 'number' || state.pitch < 0 || state.pitch > 60) {
    return false;
  }
  
  if (typeof state.bearing !== 'number') {
    return false;
  }
  
  return true;
}

/**
 * –°—Ç–≤–æ—Ä—é—î debounced —Ñ—É–Ω–∫—Ü—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 */
export function createDebouncedSave(map, delay = 1000) {
  let timeout;
  
  return function() {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      saveMapState(map);
    }, delay);
  };
}