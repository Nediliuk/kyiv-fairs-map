// data/cache-manager.js
// –°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑—É–º–Ω–æ–≥–æ –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è API –¥–∞–Ω–∏—Ö –ø—Ä–æ —è—Ä–º–∞—Ä–∫–∏

const CACHE_KEY_SITES = 'kyiv-fairs-sites-v1';
const CACHE_KEY_ZONES = 'kyiv-fairs-zones-v1'; 
const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 –≥–æ–¥–∏–Ω–∏ –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∫–µ—à (–Ω–µ —Å—Ç–∞—Ä—à–µ 24 –≥–æ–¥–∏–Ω)
function isCacheValid(timestamp) {
  return timestamp && (Date.now() - timestamp < CACHE_DURATION);
}

// –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–∞–π—Ç–∏ –∑ –∫–µ—à—É
export async function getCachedSites() {
  try {
    const cached = localStorage.getItem(CACHE_KEY_SITES);
    if (cached) {
      const { data, timestamp } = JSON.parse(cached);
      if (isCacheValid(timestamp)) {
        console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å–∞–π—Ç–∏ –∑ –∫–µ—à—É');
        return { data, fromCache: true };
      } else {
        console.log('‚è∞ –ö–µ—à —Å–∞–π—Ç—ñ–≤ –∑–∞—Å—Ç–∞—Ä—ñ–≤, –ø–æ—Ç—Ä—ñ–±–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
      }
    }
  } catch (e) {
    console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É —Å–∞–π—Ç—ñ–≤:', e);
    // –û—á–∏—â–∞—î–º–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π –∫–µ—à
    localStorage.removeItem(CACHE_KEY_SITES);
  }
  return null;
}

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∞–π—Ç—ñ–≤ –≤ –∫–µ—à
export function setCachedSites(data) {
  try {
    localStorage.setItem(CACHE_KEY_SITES, JSON.stringify({
      data,
      timestamp: Date.now()
    }));
    console.log('üíæ –°–∞–π—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –∫–µ—à');
  } catch (e) {
    console.warn('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Å–∞–π—Ç–∏ –≤ –∫–µ—à:', e);
  }
}

// –ê–Ω–∞–ª–æ–≥—ñ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–æ–Ω —Ç–æ—Ä–≥—ñ–≤–ª—ñ
export async function getCachedZones() {
  try {
    const cached = localStorage.getItem(CACHE_KEY_ZONES);
    if (cached) {
      const { data, timestamp } = JSON.parse(cached);
      if (isCacheValid(timestamp)) {
        console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑–æ–Ω–∏ –∑ –∫–µ—à—É');
        return { data, fromCache: true };
      } else {
        console.log('‚è∞ –ö–µ—à –∑–æ–Ω –∑–∞—Å—Ç–∞—Ä—ñ–≤, –ø–æ—Ç—Ä—ñ–±–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
      }
    }
  } catch (e) {
    console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–µ—à—É –∑–æ–Ω:', e);
    localStorage.removeItem(CACHE_KEY_ZONES);
  }
  return null;
}

export function setCachedZones(data) {
  try {
    localStorage.setItem(CACHE_KEY_ZONES, JSON.stringify({
      data,
      timestamp: Date.now()
    }));
    console.log('üíæ –ó–æ–Ω–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –∫–µ—à');
  } catch (e) {
    console.warn('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –∑–æ–Ω–∏ –≤ –∫–µ—à:', e);
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–æ–≥–æ –∫–µ—à—É (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è –º–∞–π–±—É—Ç–Ω—ñ—Ö –æ–Ω–æ–≤–ª–µ–Ω—å)
export function clearCache() {
  localStorage.removeItem(CACHE_KEY_SITES);
  localStorage.removeItem(CACHE_KEY_ZONES);
  console.log('üóëÔ∏è –ö–µ—à –æ—á–∏—â–µ–Ω–æ');
}