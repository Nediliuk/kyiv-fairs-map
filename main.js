import { map } from './data/init-map.js';
import { loadFairSites } from './data/load-fair-sites.js';
import { loadFairZones } from './data/load-fair-zones.js';
import { getCachedSites, setCachedSites, getCachedZones, setCachedZones } from './data/cache-manager.js';
import { assembleFairs } from './logic/fair-assembly.js';
import { renderLayers } from './ui/render-map.js';
import {
  syncMobileDayLabel,
  enableMobileTogglePanel,
} from './ui/mobile/mobile-ui.js';
import { updateOffscreenIndicators } from './logic/offscreen-indicators.js';
import { initMobilePopup } from './ui/mobile/mobile-popups.js';
import { initFeedback } from './logic/feedback.js';
import { VegetableLoader } from './logic/vegetable-loader.js';

// –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –æ–≤–æ—á—ñ–≤
let vegetableLoader;

// –í–∏—è–≤–ª–µ–Ω–Ω—è –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –µ–∫—Ä–∞–Ω–∞
function updateIsMobile() {
  window.isMobile = window.innerWidth <= 768;
}
updateIsMobile();
window.addEventListener('resize', updateIsMobile);

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è UI (–¥–µ—Å–∫—Ç–æ–ø / –º–æ–±—ñ–ª—å–Ω–∏–π)
async function loadUI() {
  const uiPath = window.isMobile
    ? './ui/mobile/mobile-ui.html'
    : './ui/ui.html';
  const html = await fetch(uiPath).then((r) => r.text());
  const uiContainer = document.getElementById('ui-container');
  uiContainer.innerHTML = html;

  console.log('[UI loaded]');

  initMobilePopup();
  initFeedback();

  // üé¨ –ó–ê–ü–£–°–ö–ê–Ñ–ú–û –ê–ù–Ü–ú–ê–¶–Ü–Æ –û–í–û–ß–Ü–í –û–î–†–ê–ó–£ –ü–Ü–°–õ–Ø –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø UI!
  console.log('ü•ï –ó–∞–ø—É—Å–∫–∞—î–º–æ –ª–æ–∞–¥–µ—Ä –∑ –æ–≤–æ—á–∞–º–∏...');
  vegetableLoader = new VegetableLoader();
  vegetableLoader.start();
  console.log('‚úÖ –õ–æ–∞–¥–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π, –ø–æ–∫–∏ –∫–∞—Ä—Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è');
}

// –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ UI —ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ –ª–æ–∞–¥–µ—Ä
loadUI();

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–≤—ñ–∂–∏—Ö –¥–∞–Ω–∏—Ö –∑ API —ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–µ—à—É
async function loadFreshData() {
  console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–≤—ñ–∂—ñ –¥–∞–Ω—ñ –∑ API...');
  const [sites, zones] = await Promise.all([
    loadFairSites(),
    loadFairZones(),
  ]);
  
  setCachedSites(sites);
  setCachedZones(zones);
  
  return { sites, zones };
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
async function updateDataInBackground(currentFairs) {
  try {
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö...');
    const { sites, zones } = await loadFreshData();
    
    const newFairs = assembleFairs({ sites, zones });
    
    if (newFairs.length !== currentFairs.length) {
      console.log('‚ú® –ó–Ω–∞–π–¥–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ —è—Ä–º–∞—Ä–∫–∏');
    }
    
  } catch (err) {
    console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ —É —Ñ–æ–Ω—ñ:', err);
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ä—Ç–∏ - —Ç–µ–ø–µ—Ä –ª–æ–∞–¥–µ—Ä –£–ñ–ï –ø—Ä–∞—Ü—é—î
map.on('load', async () => {
  try {
    // –õ–æ–∞–¥–µ—Ä –£–ñ–ï –ø—Ä–∞—Ü—é—î –∑ —Å–∞–º–æ–≥–æ –ø–æ—á–∞—Ç–∫—É ‚úÖ

    let sites, zones, usingCache = false;
    
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
    const cachedSites = await getCachedSites();
    const cachedZones = await getCachedZones();
    
    if (cachedSites && cachedZones) {
      console.log('‚ö° –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
      sites = cachedSites.data;
      zones = cachedZones.data;
      usingCache = true;
    } else {
      console.log('üì° –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ API (–ø–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫ –∞–±–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π –∫–µ—à)');
      const freshData = await loadFreshData();
      sites = freshData.sites;
      zones = freshData.zones;
    }
    
    // –ó–±–∏—Ä–∞—î–º–æ —Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–º–æ –¥–∞–Ω—ñ
    const fairs = assembleFairs({ sites, zones });
    renderLayers(map, fairs);
    
    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –º–æ–±—ñ–ª—å–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (window.isMobile) {
      syncMobileDayLabel();
      enableMobileTogglePanel();
    }
    
    // –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á —Ä—É—Ö—É –∫–∞—Ä—Ç–∏ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤
    map.on('move', () => updateOffscreenIndicators(map, fairs));

    // üõë –¢–ï–ü–ï–† –ó–£–ü–ò–ù–Ø–Ñ–ú–û –õ–û–ê–î–ï–† –Ü –ü–†–ò–•–û–í–£–Ñ–ú–û –ô–û–ì–û
    console.log('üõë –ö–∞—Ä—Ç–∞ –≥–æ—Ç–æ–≤–∞! –ó—É–ø–∏–Ω—è—î–º–æ –ª–æ–∞–¥–µ—Ä...');
    
    if (vegetableLoader) {
      vegetableLoader.stop();
      console.log('‚úÖ –ê–Ω—ñ–º–∞—Ü—ñ—è –æ–≤–æ—á—ñ–≤ –∑—É–ø–∏–Ω–µ–Ω–∞');
    }
    
    const loader = document.getElementById('map-loader');
    if (loader) {
      loader.style.display = 'none';
      console.log('‚úÖ –õ–æ–∞–¥–µ—Ä –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ');
    }
    
    document.body.classList.add('map-ready');
    console.log('‚úÖ –ö–∞—Ä—Ç–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ —Ç–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏');
    
    // –Ø–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏ –∫–µ—à, –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —É —Ñ–æ–Ω—ñ
    if (usingCache) {
      setTimeout(() => {
        updateDataInBackground(fairs);
      }, 5000);
    }
    
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ä—Ç–∏:', err);
    
    // –ó—É–ø–∏–Ω—è—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    if (vegetableLoader) {
      vegetableLoader.stop();
    }
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    const loader = document.getElementById('map-loader');
    if (loader) {
      const loadingText = loader.querySelector('.loading-text');
      if (loadingText) {
        loadingText.textContent = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.';
        loadingText.style.color = '#FA5E5E';
      }
    }
  }
});